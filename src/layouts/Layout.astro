---
import "../styles/global.css";
import Footer from "../components/general/Footer.astro";
import ThemeIcon from "../components/general/ThemeIcon.astro";
import Header from "../components/general/Header.astro";
import SectionContainer from "../components/general/SectionContainer.astro";

interface Props {
  title: string;
  description: string;
  showHeader?: boolean;
}

const { 
  title, 
  description,
  showHeader = true 
} = Astro.props;
---

<!-- Script inline para aplicar el tema antes del primer render -->
<script is:inline>

  const theme = localStorage?.getItem("theme") || 
    (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
  
  if (theme === 'dark') {
    document.documentElement.classList.add('dark');
  } else {
    document.documentElement.classList.remove('dark');
  }
  
  localStorage.setItem('theme', theme);
  window.themeInitialized = true;
  
</script>

<html lang="es" class="scroll-smooth overflow-x-hidden min-w-[320px]">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/jpeg" href="/FotoPerfilDaniel.jpeg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover" />
    <meta name="description" content={description} />
    <meta name="color-scheme" content="light dark">
    <title>{title}</title>
    <script src="https://www.google.com/recaptcha/api.js" async defer></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Fira+Code:wght@400;500;600&display=swap&text=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.,;:!?()[]{}_-" rel="stylesheet">
  </head>

  <body class="flex flex-col min-h-screen w-full min-w-[320px] max-w-full overflow-x-hidden break-words dark:bg-[#000000] dark:bg-[radial-gradient(#ffffff33_1px,#00091d_1px)] bg-[#f5f7ff] bg-[radial-gradient(#3b82f680_1px,#f8fafc_1px)] bg-[size:20px_20px] transition-colors duration-300">
    
    {showHeader && (
      <SectionContainer id="header" fullWidth={true}>
        <Header />
      </SectionContainer>
    )}

    <div class="flex-1 w-full overflow-hidden min-w-[320px]">
      <slot />
    </div>
    
    <Footer />
  
    <script>
      // Navegación inteligente que actualiza los enlaces activos según la sección visible
      document.addEventListener('DOMContentLoaded', () => {
        const navLinks = document.querySelectorAll('nav a[href^="#"]');
        const sections = document.querySelectorAll('section[data-section]');
        
        if (sections.length > 0 && navLinks.length > 0) {
          // Destacar primer enlace por defecto
          const firstLink = navLinks[0];
          firstLink.classList.add('nav-active', 'text-white', 'font-medium');
          firstLink.classList.remove('text-gray-300');
          
          const observerOptions = {
            root: null,
            rootMargin: '-50px 0px -50% 0px',
            threshold: 0.1
          };
          
          const observer = new IntersectionObserver((entries) => {
            const visibleSections = entries.filter(entry => entry.isIntersecting);
            
            if (visibleSections.length > 0) {
              const sectionId = visibleSections[0].target.getAttribute('data-section');
              
              navLinks.forEach(link => {
                const href = link.getAttribute('href').substring(1);
                
                if (href === sectionId) {
                  link.classList.add('nav-active', 'text-white', 'font-medium');
                  link.classList.remove('text-gray-300');
                } else {
                  link.classList.remove('nav-active', 'text-white', 'font-medium');
                  link.classList.add('text-gray-300');
                }
              });
            }
          }, observerOptions);
          
          
          sections.forEach(section => {
            observer.observe(section);
          });
        }
      });
    </script>
    
  </body>
</html>